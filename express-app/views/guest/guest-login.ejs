<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/guest/guest-login.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <title>MedExtract</title>
</head>

<body>
    <nav class="guest-navbar">
        <div class="container">

            <!-- Logo -->
            <div class="logo">
                <a href="/">
                    <img src="/images/logo-nav.png" alt="MedExtract Logo" class="logo-img" />
                </a>
            </div>

            <!-- Desktop Nav -->
            <ul class="nav" id="guest-nav">
                <li><a href="/">Home</a></li>
                <li><a href="/html/guest/guest-about.html">About</a></li>
                <li><a href="/guest-login">Login</a></li>
                <li><a href="/guest-register">Register</a></li>
            </ul>

            <!-- Burger Button -->
            <div class="burger" id="burger-toggle" onclick="toggleBurger()">
                <img src="/images/icons/list-white.svg" alt="Menu" />
            </div>

            <!-- Mobile Dropdown Menu -->
            <div class="mobile-menu" id="mobile-menu">
                <ul>
                    <li><a href="/">Home</a></li>
                    <li><a href="/html/guest/guest-about.html">About</a></li>
                    <li><a href="/guest-login">Login</a></li>
                    <li><a href="/guest-register">Register</a></li>
                </ul>
            </div>

        </div>
    </nav>


    <div id="server-message" class="server-message hidden">
        <img id="server-message-icon" src="/images/icons/seal-check.svg" alt="Status Icon"
            class="server-message-icon" />
        <span id="server-message-text">This is a server message</span>
        <img id="server-message-close" src="/images/icons/x-circle.svg" alt="Close" class="server-message-close" />
    </div>

    <section class="login">
        <div class="container">
            <form id="form" action="/">
                <h1>User Login</h1>
                <div class="input-control">
                    <label for="email">Email</label>
                    <input id="email" name="email" type="text" />
                    <div class="error"></div>
                </div>
                <div class="input-control">
                    <label for="password1">Password</label>
                    <div class="input-wrapper">
                        <input type="password" id="password1" name="password1" />
                        <img src="/images/icons/eye-slash.svg" alt="Toggle Password" class="toggle-password"
                            id="toggle1" />
                    </div>

                    <div class="error"></div>

                    <div class="links">
                        <a href="/guest-recovery">Forgot Password?</a>
                        <a href="/guest-register">Create Account</a>
                    </div>
                </div>
                <button type="submit">Login</button>


            </form>
        </div>
    </section>


    <footer class="footer">
        <div class="container">
            <div class="f-1">
                <a href="/">
                    <img src="/images/logo-footer.png" alt="MedExtract Logo" class="logo-img" />
                </a>
                <p>
                    Empowering healthcare through intelligent technology. Our system combines OCR, NLP, and BioBERT NER
                    to transform complex clinical narratives into structured medical insightsâ€”supporting accuracy,
                    efficiency, and better patient care.
                </p>
            </div>

            <div class="f-2">
                <div>
                    <h2>Links</h2>
                    <ul class="nav">
                        <li><a href="/">Home</a></li>
                        <li><a href="/html/guest/guest-about.html">About</a></li>
                        <li><a href="/guest-login">Login</a></li>
                        <li><a href="/guest-register">Register</a></li>
                    </ul>
                </div>
            </div>

            <div class="f-3">
                <h2>Contacts</h2>
                <div class="contacts">
                    <div>
                        <img src="/flaticons/index/location.png" /> &nbsp;
                        <p>
                            University of The East Caloocan, 105 Samson Rd, Caloocan, Metro
                            Manila
                        </p>
                    </div>
                    <div>
                        <img src="/flaticons/index/email.png" /> &nbsp;
                        <p>nogot.markvincent@ue.edu.ph</p>
                    </div>
                    <div>
                        <img src="/flaticons/index/call.png" /> &nbsp;
                        <p>09991624156</p>
                    </div>
                </div>
            </div>
        </div>
    </footer>

    <script>
        const form = document.getElementById("form");
        const email = document.getElementById("email");
        const password1 = document.getElementById("password1");

        form.addEventListener("submit", async (e) => {
            e.preventDefault();

            const inputControls = form.querySelectorAll(".input-control");
            inputControls.forEach(ic => {
                ic.classList.remove("error", "success");
                ic.querySelector(".error").innerText = "";
            });

            validateInputs();

            const errors = form.querySelectorAll(".error");
            const hasErrors = Array.from(errors).some(err => err.innerText !== "");
            if (hasErrors) {
                showServerMessage("Fix highlighted fields.", "error");
                return;
            }

            const formData = new FormData(form);

            try {
                const res = await fetch("/login", {
                    method: "POST",
                    body: formData,
                });

                const message = await res.text();

                if (!res.ok) throw new Error(message);

                showServerMessage(message, "success");
                setTimeout(() => {
                    window.location.href = "/user-extract";
                }, 1500);

            } catch (err) {
                showServerMessage(err.message, "error");
            }
        });

        const toggle1 = document.getElementById("toggle1");
        const password1Input = document.getElementById("password1");

        toggle1.addEventListener("click", () => {
            if (password1Input.type === "password") {
                password1Input.type = "text";
                toggle1.src = "/images/icons/eye.svg";
            } else {
                password1Input.type = "password";
                toggle1.src = "/images/icons/eye-slash.svg";
            }
        });


        const setError = (element, message) => {
            const inputControl = element.closest(".input-control");
            const errorDisplay = inputControl.querySelector(".error");

            errorDisplay.innerText = message;
            inputControl.classList.add("error");
            inputControl.classList.remove("success");
        };

        const setSuccess = (element) => {
            const inputControl = element.closest(".input-control");
            const errorDisplay = inputControl.querySelector(".error");

            errorDisplay.innerText = "";
            inputControl.classList.add("success");
            inputControl.classList.remove("error");
        };


        const isValidEmail = (email) => {
            const re =
                /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(String(email).toLowerCase());
        };

        const validateInputs = () => {

            const emailValue = email.value.trim();
            const password1Value = password1.value.trim();


            if (emailValue === "") {
                setError(email, "Email is required");
            } else if (!isValidEmail(emailValue)) {
                setError(email, "Provide a valid email address");
            } else {
                setSuccess(email);
            }

            if (password1Value === "") {
                setError(password1, "Password is required");
            } else if (password1Value.length < 8) {
                setError(password1, "Password must be at least 8 characters");
            } else if (password1Value.length > 64) {
                setError(password1, "Password must not exceed 64 characters");
            } else {
                setSuccess(password1);
            }

        };

        let serverMessageTimeout = null;

        function showServerMessage(message, type = "success") {
            const serverMessage = document.getElementById("server-message");
            const messageText = document.getElementById("server-message-text");
            const messageIcon = document.getElementById("server-message-icon");

            serverMessage.classList.remove("success", "error");

            messageText.textContent = message;

            if (type === "success") {
                serverMessage.classList.add("success");
                messageIcon.src = "/images/icons/seal-check-green.svg";
            } else if (type === "error") {
                serverMessage.classList.add("error");
                messageIcon.src = "/images/icons/seal-warning-red.svg";
            }

            serverMessage.classList.remove("hidden");
            serverMessage.classList.add("show");

            sessionStorage.setItem(
                "serverMessage",
                JSON.stringify({ message, type })
            );

            if (serverMessageTimeout) clearTimeout(serverMessageTimeout);

            serverMessageTimeout = setTimeout(() => {
                hideServerMessage();
            }, 3000);
        }

        function hideServerMessage() {
            const serverMessage = document.getElementById("server-message");

            if (serverMessageTimeout) clearTimeout(serverMessageTimeout);

            sessionStorage.removeItem("serverMessage");
            serverMessageTimeout = null;

            serverMessage.classList.remove("show");

            setTimeout(() => {
                serverMessage.classList.add("hidden");
            }, 400);
        }
        document
            .getElementById("server-message-close")
            .addEventListener("click", () => {
                hideServerMessage();
            });

        window.addEventListener("load", () => {
            const stored = sessionStorage.getItem("serverMessage");
            if (stored) {
                const { message, type } = JSON.parse(stored);
                if (message) showServerMessage(message, type);
            }
        });

        function toggleBurger() {
            const burger = document.getElementById("burger-toggle");
            const mobileMenu = document.getElementById("mobile-menu");
            const burgerIcon = burger.querySelector("img");

            mobileMenu.classList.toggle("open");

            if (mobileMenu.classList.contains("open")) {
                burgerIcon.src = "/images/icons/x-white.svg";
            } else {
                burgerIcon.src = "/images/icons/list-white.svg";
            }
        }


    </script>
</body>

</html>